回顾
1.文件操作
	普通文件
	csv文件
2.函数
	定义和调用
	函数的常用格式
	return语句
	函数传参
----------------------------------
1.变量的作用域
	a.全局变量和局部变量
	b.局部变量
	c.全局变量

	a.全局变量和局部变量
	全局变量：定义在函数外的变量
	局部变量:定义在函数内部的变量
	获取变量的值得时候，先获取当前作用域名称和变量值，如果没有找到，到上一层变量作用域搜索变量的值，如果没有就报错
	b.局部变量
	注意:不同函数可以定义相同变量的名字(局部变量)，互相不影响
	c.全局变量
	声明在函数外的变量
	注意:当全局变量和局部变量同名时候，优先使用局部变量
	global 变量在函数体内时候声明为全局变量
2.函数的递归
	a.什么是递归
	b.递归函数操作

	a.什么是递归
	递归函数就是子程序(函数)直接调用自己活着通过一系列语句间接调用自己描述问题和解决办法(自己调用自己)	

	函数递归特性
	1.必须有一个明确结束的条件
	2.每次进入到更深一层递归的时候，问题规模比上次递归有减少
	3.相邻两次重复之间紧密联系，前一次为后一次做准备(通常前一次的输出作为后一次的输入)
	4.递归的效率不高，递归层数过多会导致栈溢出(最大递归层数：997)

	b.递归的操作
3.匿名函数
	a.什么是匿名函数
	b.匿名函数用法

	a.什么是匿名函数
	函数在定义过程中，没有给定函数名，python用lambda来创建匿名函数
	lambda只是表达式，函数体比def简单
	lambda主体不是代码块，只能封装有限的逻辑进去
	lambda有自己的命名空间，不能访问自己参数列表外或者全局命名空间的参数

	b.匿名函数的用法
	lambda 参数列表:变量[表达式]
4.模块操作
	a.模块的定义
	b.模块使用方法
	c.os模块使用
	d.sys模块使用
	e.模块的安装

	a.模块的定义
	python中模块是一个以.py结尾的文件
	模块可以把一个复杂程序按照功能进行分开，分别存放在不同文件中使用
	公共模块存放在python的安装目录下的lib中

	b.模块的使用方法
	以.py结尾的文件
	b1.import 模块
	b2.from 模块 import xxx
	注意:导入函数必须加模块的名字 
	'''
	import a

	a.sub(10,20)
	'''
	from a import sub

	sub(100,300)

	jian(20,19)
	c.os模块的操作
		import os
		os.system('dir')            #运行系统中的命令
		os.remove('D:\\1.txt')     #删除系统中的文件
		os.getcwd()                 #当前路径
		print(os.listdir('D:\\'))   #查看指定目录下所有文件
		print(os.path.split('D:\\mz\\2.txt'))  #返回一个路径的目录和文件名
		print(os.path.isfile('D:\\2.csv'))     #判断是否是目录
		os.path.isdir()              #判断是否是目录
		os.path.exists()             判断是否存在
	d.sys模块
		print(sys.version)
		print(sys.path)
	e.python中模块的安装
		1.单文件模块
		2.多文件模块
		3.easy install方式
		4.pip方式

		1.单文件模块
		安装方法：直接拷贝文件到指定目录$python_dir/Lib

		2.多文件模块
		安装方法：解压压缩包，进入到文件夹中执行python setup.py install

		3.easy install 方式
		easy install 包名字
		easy install 包.egg

		4.pip安装
		系统中必须安装好pip
		pip install pymysql


练习：
键盘输入一个文件的完整路径，判断该文件是否存在，如果存在，删除该文件，并且写入日志(0822.log)文件中：
	xxx已经存在，删除
如果该文件不存在，创建该文件，并且写入日志(0822.log)文件中：
    xxx不存在，已经创建


5.面向对象基础
	a.面向对象的概念
	b.面向对象基本概念(类、对象)
	c.面向对象3大特性

	a.面向对象的概念
	抽象眼光看世界
	万物皆对象
	面向对象3大特性:继承、封装、多态

	b.类和对象
	类:描述具有相同属性和方法的集合，定义了集合中每个对象共有的属性和方法
	类：
		妖魔鬼怪
		神仙
		普通人

		男、女

		好人、坏人
	对象：通过类定义数据结构实例，某一个具体事物的存在，现实中可以直接使用
	对象
		悟空
		8戒
		唐sir
		牛夫人
		观音姐姐
		菩提老祖
	c.面向对象3大特性
	封装：数据和行为的结合，目的是增强安全性，简化代码，使用者不需要考虑具体细节，只需要通过外部接口一定权限来访问
	常见情况：通过对开源软件进行修改，封装后形成自己的软件

	继承：一个派生类继承基类的属性和方法
	唐sir：人有人他妈，妖有妖他妈，你妈贵姓啊？
	人：
		父亲:单眼皮   母亲：大个   孩子(单眼皮大个)
	妖怪：
		牛魔：坏      小甜甜：机灵  redhair(坏、机灵)

	多态：针对不同类型变量进行相同操作，根据数据类型不同，表现出不同行为
	白骨精---打---哏了
	白龙马---打---核心成员
6.类的定义和实例
	a.python中定义类的方法
	b.类定义和创建对象

	a.python中定义类的方法
	经典类
		class 类名：
			方法列表
	新式类
		class  类名(object):
			方法列表
	b.类定义和创建对象
	注意：创建一个对象，使用模型来创造实物
7.__init__()方法
	a.__init__()定义
	b.__init__()调用

	a.__init__()定义
	定义默认值
		class 类：
			def __init__(self):
				方法列表
	b.__init__()调用
	注意：没有创建对象是没有调用__init__前就默认有2个属性，__init__方法创建后对象被默认调用

	__init__()方法，创建一个对象时候被默认调用
	__init__(self)中第一个参数的名字是self，如果在创建对象时候传递2参数，那么在self后面跟2个额外的参数

8.self的应用(实例方法)
	a.self应用
	b.注意事项
	self可以理解为自己
	可以把self当做c++的指针，就是自己
	当某个对象调用其方法时候，python解释器会把这个对象作为第一个参数传递给self,开发者只需要传递后面参数即可
	注意:通过它来传递实例的属性和方法，调用时候只能由实例对象调用

9.类的属性的访问特性
	无法通过类名.属性来访问实例属性
	对于类的属性我们可以通过类名及实例对象去访问



10.类的私有化属性
	a.私有化属性表示方法
	python没有c++、java的private、public关键字区分公有属性还是私有属性，私有化属性都是以__开头，否则为公有属性
	b.私有化属性访问方法

11.类的方法
	调用时候实例对象和类对象都可以调用
	a.类的方法的定义
	类对象拥有的方法通常使用装饰器@classmethod来表示方法
	类的方法，第一个参数必须是类的对象，一般cls作为第一个参数
	b.类的方法实例
	类的方法还有一个用途是对类的属性进行修改

12.继承
	a.单继承
	一个类派生另外一个子类，子类继承父类的属性和方法
	b.多继承
	子类继承多个父类的属性和方法
	c.父类重写
	当子类方法和父类中方法名字一致时候，子类会重写父类
	

